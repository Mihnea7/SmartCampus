# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Smart Campus CI

on:
  push:
    branches: [ main, eval ]
  pull_request:
    branches: [ main, eval ]

jobs:
  backend:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: ./backend
      env:
        constring_secret: ${{ secrets.CONSTRING }}
      run: |
        pytest --cov-report term --cov=. test_flask.py --cov-fail-under=80 --constring="$constring_secret"

  frontend:
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v2
   - uses: actions/setup-node@v2
     with:
       node-version: '10'
   - name: Set up Python for local server
     uses: actions/setup-python@v2
     with:
       python-version: 3.8
   - name: Install Python dependencies
     run: |
       python -m pip install --upgrade pip
       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
   - name: Run Flask server
     working-directory: ./backend
     env:
       constring_secret: ${{ secrets.CONSTRING }}
     run: python app.py --constring="$constring_secret" &  
   - name: Set up React and dependencies
     working-directory: ./frontend
     run: |
        npm ci
   - name: Cypress run
     uses: cypress-io/github-action@v2
     with:
       working-directory: ./frontend
       start: npm start
       wait-on: 'http://localhost:3000'
       config: experimentalComponentTesting=false       
